{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://battleship/./node_modules/events/events.js","webpack://battleship/webpack/bootstrap","webpack://battleship/webpack/runtime/compat get default export","webpack://battleship/webpack/runtime/define property getters","webpack://battleship/webpack/runtime/hasOwnProperty shorthand","webpack://battleship/./src/modules/Ship.js","webpack://battleship/./src/modules/Events.js","webpack://battleship/./src/modules/Gameboard.js","webpack://battleship/./src/modules/Player.js","webpack://battleship/./src/modules/DOM.js","webpack://battleship/./src/app.js"],"sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/* \r\nTODO\r\nBegin your app by creating the Ship class/factory (your choice).\r\n\r\nYour ‘ships’ will be objects that include their length, the number of times they’ve been hit and whether or not they’ve been sunk.\r\n\r\nREMEMBER you only have to test your object’s public interface. Only methods or properties that are used outside of your ‘ship’ object need unit tests.\r\n\r\nShips should have a hit() function that increases the number of ‘hits’ in your ship.\r\n\r\nisSunk() should be a function that calculates whether a ship is considered sunk based on its length and the number of hits it has received. \r\n\r\n*/\r\n\r\nclass Ship {\r\n  /**\r\n   * @param name Could be: \"carrier\", \"battleship\", \"destroyer\", \"submarine\", \"patrolBoat\"\r\n   * @param length lenght of the ship\r\n   */\r\n  constructor(name, length) {\r\n    this.name = name;\r\n    this.length = length;\r\n    this.hits = 0;\r\n  }\r\n\r\n  /**\r\n   *@hit Increments the number of ship's hits\r\n   */\r\n  hit() {\r\n    this.hits++;\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   *@returns Returns true if ship has sunk, false if otherwise\r\n   */\r\n  isSunk() {\r\n    return this.hits >= this.length;\r\n  }\r\n}\r\n\r\nexport default Ship;\r\n","import EventEmitter from \"events\";\r\n\r\nconst eventEmitter = new EventEmitter();\r\n\r\nexport default eventEmitter;\r\n\r\n/* \r\nemits\r\n\r\nDOM: \"gameboard click\"\r\n\r\n*/\r\n\r\n// map update\r\n\r\n/* export default class Events {\r\n  static eventEmitter = new EventEmitter();\r\n} */\r\n","import Ship from \"./Ship.js\";\r\nimport { Player, AI } from \"./Player.js\";\r\nimport eventEmitter from \"./Events.js\";\r\n/* \r\nTODO\r\nNote that we have not yet created any User Interface. We should know our code is coming together by running the tests. You shouldn’t be relying on console.log or DOM methods to make sure your code is doing what you expect it to.\r\n\r\n//1. Gameboards should be able to place ships at specific coordinates by calling the ship factory function.\r\n\r\n//2. Gameboards should have a receiveAttack function that takes a pair of coordinates, determines whether or not the attack hit a ship and then sends the ‘hit’ function to the correct ship, or records the coordinates of the missed shot.\r\n\r\n3. Gameboards should keep track of missed attacks so they can display them properly.\r\n\r\n4. Gameboards should be able to report whether or not all of their ships have been sunk.\r\n\r\n*/\r\n\r\nclass Gameboard {\r\n  constructor(_player) {\r\n    this.gameState = this.#createGameState();\r\n    this.player = _player;\r\n    this.map = Gameboard.generateMap();\r\n\r\n    //listens to DOM changes\r\n    eventEmitter.on(\"place ship\", (playerName, ship, coord, isVertical) => {\r\n      if (playerName == this.player) this.placeShip(ship, coord, isVertical);\r\n    });\r\n\r\n    // placeShip(ship, [row, col] = coord, isVertical)\r\n  }\r\n\r\n  static generateMap() {\r\n    var map = [];\r\n\r\n    var gameState = {};\r\n    for (var i = 0; i < 10; i++) {\r\n      var row = [];\r\n\r\n      for (var j = 0; j < 10; j++) {\r\n        // You can set initial values or leave it empty\r\n        // For example, you can set all elements to 0 initially:\r\n        row.push(0);\r\n      }\r\n\r\n      map.push(row);\r\n    }\r\n\r\n    return map;\r\n  }\r\n\r\n  /**\r\n   * @param {Ship} ship - The ship\r\n   * @param {number[]} coords - Coordinates of the ship in the map\r\n   */\r\n\r\n  placeShip(ship, [row, col] = coord, isVertical) {\r\n    let success = true;\r\n\r\n    // Create a deep copy of the map\r\n    let tempMap = this.map.map((row) => [...row.map((cell) => cell)]);\r\n\r\n    // Create a shallow copy of the shipsAndTheirOccupiedSpaces\r\n    let tempList = { ...this.gameState.shipsAndTheirOccupiedSpaces };\r\n\r\n    for (let i = 0; i < ship.length; i++) {\r\n      if (this.#isPlacementPossible(row, col)) {\r\n        tempMap[row][col] = \"S\";\r\n        tempList[`${row},${col}`] = ship;\r\n\r\n        // Update row or col based on the orientation\r\n        isVertical ? row++ : col++;\r\n      } else {\r\n        // If placement is not possible, set success to false and break the loop\r\n        success = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (success) {\r\n      this.map = tempMap;\r\n      this.gameState.shipsAndTheirOccupiedSpaces = tempList;\r\n    }\r\n\r\n    return success;\r\n  }\r\n\r\n  placeShipsRandomly() {\r\n    const getRandomCoord = () => Math.floor(Math.random() * 10);\r\n    const getRandomIsVertical = () => Math.random() < 0.5;\r\n\r\n    const Carrier = new Ship(\"Carrier\", 5);\r\n    const Battleship = new Ship(\"Battleship\", 4);\r\n    const Cruiser = new Ship(\"Cruiser\", 3);\r\n    const Submarine = new Ship(\"Submarine\", 3);\r\n    const Destroyer = new Ship(\"Destroyer\", 2);\r\n\r\n    const attemptToPlaceShip = (ship) => {\r\n      let isPlacedSuccessfully = false;\r\n      do {\r\n        const coords = [getRandomCoord(), getRandomCoord()];\r\n        isPlacedSuccessfully = this.placeShip(\r\n          ship,\r\n          coords,\r\n          getRandomIsVertical()\r\n        );\r\n      } while (!isPlacedSuccessfully);\r\n    };\r\n\r\n    attemptToPlaceShip(Carrier);\r\n    attemptToPlaceShip(Battleship);\r\n    attemptToPlaceShip(Cruiser);\r\n    attemptToPlaceShip(Submarine);\r\n    attemptToPlaceShip(Destroyer);\r\n  }\r\n\r\n  /**\r\n   * @param {Number} row\r\n   * @param {Number} col\r\n   * @returns {boolean} Returns true if a ship was hit, false if otherwise;\r\n   */\r\n  receiveAttack(row, col) {\r\n    // * push attack info\r\n    let results = { isASuccessfulHit: false, shipHit: false, waterHit: false };\r\n\r\n    // ! nahhhh giatay ang DOM makauna man ug update\r\n    if (this.map[row][col] == \"X\") {\r\n      return (results.isASuccessfulHit = false);\r\n    } else {\r\n      results.isASuccessfulHit = true;\r\n      this.map[row][col] = \"X\";\r\n\r\n      let shipHit = this.#attackShip(row, col);\r\n      if (shipHit) {\r\n        results.shipHit = true;\r\n        this.gameState.hittedSquares.push([row, col]);\r\n      } else {\r\n        results.waterHit = true;\r\n        this.gameState.missedSquares.push([row, col]);\r\n      }\r\n    }\r\n\r\n    // ! lol\r\n\r\n    return results;\r\n  }\r\n\r\n  isOver() {\r\n    return !this.map.some((row) => row.includes(\"S\"));\r\n  }\r\n\r\n  // private methods\r\n\r\n  #createGameState = () => {\r\n    return {\r\n      missedSquares: [],\r\n      hittedSquares: [], // [[x,y], [x,y], [x,y]]\r\n      shipsAndTheirOccupiedSpaces: {\r\n        /* \r\n        'x, y': Ship 1,\r\n        'x, y': Ship 1,\r\n        */\r\n      },\r\n    };\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param {Number} row\r\n   * @param {Number} col\r\n   * @returns {boolean} True if attack was successful, false otherwise;\r\n   */\r\n\r\n  #attackShip(row, col) {\r\n    const _Ship = this.gameState.shipsAndTheirOccupiedSpaces[`${row},${col}`];\r\n\r\n    // * if Ship is undefined, there's no ship at [row, col]\r\n\r\n    if (_Ship !== undefined) return _Ship.hit();\r\n    return false;\r\n  }\r\n\r\n  #isPlacementPossible(row, col) {\r\n    const numRows = this.map.length;\r\n    const numCols = this.map[0].length;\r\n\r\n    // Check if the specified row and column are within the bounds of the map\r\n    if (row < 0 || row >= numRows || col < 0 || col >= numCols) {\r\n      return false;\r\n    }\r\n\r\n    // Check if the cell is not already occupied by another ship\r\n    if (this.map[row][col] === \"S\") {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n\r\nexport default Gameboard;\r\n","/* \r\nTODO\r\n1. Players can take turns playing the game by attacking the enemy Gameboard.\r\n\r\n2. The game is played against the computer, so make the ‘computer’ capable of making random plays. The AI does not have to be smart, but it should know whether or not a given move is legal (i.e. it shouldn’t shoot the same coordinate twice). */\r\n\r\nclass Player {\r\n  constructor(playerName) {\r\n    this.name = playerName;\r\n\r\n    this.isTheirTurn = false;\r\n  }\r\n\r\n  toggleIsTheirTurn() {\r\n    this.isTheirTurn = !this.isTheirTurn;\r\n  }\r\n}\r\n\r\nclass AI extends Player {\r\n  /**\r\n   * @returns {Array.<number>}\r\n   */\r\n  generateAttack() {\r\n    const getRandomCoord = () => Math.floor(Math.random() * 10);\r\n    return [getRandomCoord(), getRandomCoord()];\r\n  }\r\n}\r\n\r\nexport { Player, AI };\r\n","import Gameboard from \"./Gameboard\";\r\nimport eventEmitter from \"./Events\";\r\nimport Ship from \"./Ship\";\r\n\r\nclass DOM {\r\n  static initialize() {}\r\n\r\n  static createGameboard(id) {\r\n    let gameboardDOM = document.createElement(\"div\");\r\n\r\n    let gameboardHTML = \"\";\r\n\r\n    for (let row = 0; row < 10; row++) {\r\n      for (let col = 0; col < 10; col++) {\r\n        gameboardHTML += `<div class=\"cell\" data-row=\"${row}\" data-col=\"${col}\"></div>`;\r\n      }\r\n    }\r\n\r\n    gameboardDOM.innerHTML = gameboardHTML;\r\n    gameboardDOM.classList.add(\"gameboard\");\r\n    gameboardDOM.setAttribute(\"id\", id);\r\n\r\n    return gameboardDOM;\r\n  }\r\n\r\n  // 1: ships placement\r\n  static initializeShipsPlacement(id, gameboard) {\r\n    let isVertical = false;\r\n\r\n    DOM.listenForCellEvents(\"player\", \"mouseover\", (cell) => {\r\n      // get row and col attr of the cell\r\n      const rowValue = cell.dataset.row; // \"2\"\r\n      const colValue = cell.dataset.col; // \"3\"\r\n\r\n      // convert from string to number\r\n      const rowNumber = parseInt(rowValue, 10); // 2\r\n      const colNumber = parseInt(colValue, 10); // 3\r\n\r\n      DOM.placeShip(gameboard.name, ship, [rowNumber, colNumber], isVertical);\r\n      DOM.darkenCells(cell, (ship.length = 3), isVertical);\r\n    });\r\n\r\n    //after all 5 ships are placed, remove event listener\r\n  }\r\n\r\n  // todo: fix glowCells not adjusting according to length\r\n  static glowCells(length, isVertical) {\r\n    const playerBoard = document.getElementById(\"player\");\r\n    const cells = Array.from(playerBoard.getElementsByClassName(\"cell\"));\r\n    let hoveredCells = [];\r\n\r\n    function findCellByDataAttributes(row, col) {\r\n      return cells.find(\r\n        (cell) =>\r\n          cell.dataset.row === row.toString() &&\r\n          cell.dataset.col === col.toString()\r\n      );\r\n    }\r\n\r\n    // Add \"mouseover\" and \"mouseout\" event listeners to each cell\r\n    cells.forEach((cell) => {\r\n      cell.addEventListener(\r\n        \"mouseover\",\r\n        DOM.#handleMouseOver(event, hoveredCells)\r\n      );\r\n      cell.addEventListener(\"mouseout\", DOM.#handleMouseOut(hoveredCells));\r\n    });\r\n  }\r\n\r\n  static removeGlowCellsListener() {\r\n    const playerBoard = document.getElementById(\"player\");\r\n    const cells = Array.from(playerBoard.getElementsByClassName(\"cell\"));\r\n\r\n    // Remove \"mouseover\" and \"mouseout\" event listeners from each cell\r\n    cells.forEach((cell) => {\r\n      cell.removeEventListener(\"mouseover\", DOM.#handleMouseOver);\r\n      cell.removeEventListener(\"mouseout\", DOM.#handleMouseOut);\r\n    });\r\n  }\r\n\r\n  static #handleMouseOver(event, hoveredCells) {\r\n    // Extract row and col from the dataset of the hovered cell\r\n    const { row, col } = event.target.dataset;\r\n\r\n    // Reset the \"dark\" class for the previously hovered cells\r\n    DOM.#resetDarkClass(hoveredCells);\r\n\r\n    // Determine varying and constant coordinates based on isVertical\r\n    const varyingCoord = isVertical ? parseInt(row, 10) : parseInt(col, 10);\r\n    const constantCoord = isVertical ? parseInt(col, 10) : parseInt(row, 10);\r\n\r\n    // Add the \"dark\" class to the specified range of cells\r\n    for (let i = varyingCoord; i < varyingCoord + length; i++) {\r\n      const currentCell = isVertical\r\n        ? findCellByDataAttributes(i, constantCoord)\r\n        : findCellByDataAttributes(constantCoord, i);\r\n\r\n      if (currentCell) {\r\n        currentCell.classList.add(\"dark\");\r\n        hoveredCells.push(currentCell);\r\n      }\r\n    }\r\n  }\r\n\r\n  static #handleMouseOut(hoveredCells) {\r\n    // Reset the \"dark\" class for the previously hovered cells\r\n\r\n    DOM.#resetDarkClass(hoveredCells);\r\n  }\r\n\r\n  static #resetDarkClass(hoveredCells) {\r\n    hoveredCells.forEach((cell) => {\r\n      cell.classList.remove(\"dark\");\r\n    });\r\n    hoveredCells = [];\r\n  }\r\n\r\n  /* \r\n  placeShip([0,0], length, isVertical)\r\n  */\r\n  static placeShip(length, coords, isVertical) {\r\n    const playerBoard = document.getElementById(\"player\");\r\n    const cells = Array.from(playerBoard.children);\r\n\r\n    const [startRow, startCol] = coords;\r\n\r\n    for (let i = 0; i < length; i++) {\r\n      let row = startRow;\r\n      let col = startCol;\r\n\r\n      if (isVertical) {\r\n        row += i;\r\n      } else {\r\n        col += i;\r\n      }\r\n\r\n      const index = row * 10 + col; // Assuming the board is a 10x10 grid\r\n      const cell = cells[index];\r\n\r\n      if (cell) {\r\n        cell.classList.add(\"ship\");\r\n      }\r\n    }\r\n  }\r\n\r\n  static stopShipsPlacement() {}\r\n\r\n  // Extract the logic to get row and col values from a cell\r\n\r\n  static displayGameboard({ map, gameState } = gameboard, id, showShips) {\r\n    const playerBoard = document.getElementById(id);\r\n    const cells = Array.from(playerBoard.children);\r\n\r\n    cells.forEach((cell) => {\r\n      const row = parseInt(cell.dataset.row, 10);\r\n      const col = parseInt(cell.dataset.col, 10);\r\n\r\n      // Check if the cell is a missed square\r\n      if (\r\n        gameState.missedSquares.some(\r\n          ([missedRow, missedCol]) => row === missedRow && col === missedCol\r\n        )\r\n      ) {\r\n        cell.classList.add(\"missed\");\r\n      } else {\r\n        cell.classList.remove(\"missed\");\r\n      }\r\n\r\n      // Check if the cell is a hitted square\r\n      if (\r\n        gameState.hittedSquares.some(\r\n          ([hitRow, hitCol]) => row === hitRow && col === hitCol\r\n        )\r\n      ) {\r\n        cell.classList.add(\"hitted\");\r\n      } else {\r\n        cell.classList.remove(\"hitted\");\r\n      }\r\n\r\n      // Check if the cell is part of a ship\r\n      if (showShips) {\r\n        const key = `${row},${col}`;\r\n        if (gameState.shipsAndTheirOccupiedSpaces.hasOwnProperty(key)) {\r\n          // The cell is part of a ship\r\n          cell.classList.add(\"ship\");\r\n        } else {\r\n          // The cell is not part of a ship\r\n          cell.classList.remove(\"ship\");\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  static darkenCells(cell, length) {\r\n    // for()\r\n    cell.classList.add(\"dark\");\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Node} cell\r\n   * @param {string} color Option: \"dark\" or \"red\"\r\n   */\r\n  static darkenCell(cell, color) {\r\n    cell.classList.add(`${color}`);\r\n  }\r\n\r\n  static rotateShip() {}\r\n\r\n  static attackShip() {}\r\n\r\n  // * Event Listeners\r\n  /**\r\n   * @listenForCellEvents\r\n   * @param {string} id The id attribute of the gameboard\r\n   * @param {string} _event The name of the event to listen to\r\n   * */\r\n\r\n  // Example usage: listenForClicks(\"playerBoard\");\r\n\r\n  static listenForCellEvents(\r\n    id,\r\n    _event,\r\n    fn = (cell) => {\r\n      console.log(cell);\r\n    }\r\n  ) {\r\n    const gameboard = document.getElementById(`${id}`);\r\n    const cells = gameboard.querySelectorAll(\".cell\");\r\n\r\n    cells.forEach((cell) => {\r\n      cell.addEventListener(`${_event}`, () => {\r\n        fn(cell);\r\n      });\r\n    });\r\n  }\r\n\r\n  static listenForGameboardClicks() {\r\n    const addClickEvent = (board) => {\r\n      board.addEventListener(\"click\", (e) => {\r\n        let gameboardClicked = board;\r\n        const cell = e.target;\r\n        const { rowNumber, colNumber } = DOM.#getRowAndColFromCell(cell);\r\n        eventEmitter.emit(\"gameboard click\", board, cell, rowNumber, colNumber);\r\n      });\r\n    };\r\n\r\n    const playerBoard = document.getElementById(\"player\");\r\n    const enemyBoard = document.getElementById(\"enemy\");\r\n\r\n    addClickEvent(playerBoard);\r\n    addClickEvent(enemyBoard);\r\n  }\r\n\r\n  static #getRowAndColFromCell(cell) {\r\n    const rowValue = cell.dataset.row;\r\n    const colValue = cell.dataset.col;\r\n    const rowNumber = parseInt(rowValue, 10);\r\n    const colNumber = parseInt(colValue, 10);\r\n    return { rowNumber, colNumber };\r\n  }\r\n\r\n  static displayInstruction() {}\r\n\r\n  static updateInstruction(_shipName, _shipLength) {\r\n    const shipName = document.getElementById(\"placing-ships__shipName\");\r\n    shipName.innerText = `Ship: ${_shipName}`;\r\n\r\n    const shipLength = document.getElementById(\"placing-ships__shipLength\");\r\n    shipLength.innerText = `Length: ${_shipLength}`;\r\n  }\r\n\r\n  //TODO: WIP\r\n  static announceWinner(results) {\r\n    let modalBackground = document.querySelector(\".modal__bg\");\r\n    let winnerText = document.querySelector(\".winner__text\");\r\n\r\n    let restartButton = document.getElementById(\"restart__button--modal\");\r\n    restartButton.onclick = () => {\r\n      location.reload();\r\n    };\r\n\r\n    modalBackground.style.display = \"flex\";\r\n\r\n    winnerText.innerText = results;\r\n  }\r\n}\r\n\r\nexport default DOM;\r\n","import Ship from \"./modules/Ship\";\r\nimport Gameboard from \"./modules/Gameboard\";\r\nimport { Player, AI } from \"./modules/Player\";\r\nimport DOM from \"./modules/DOM\";\r\nimport eventEmitter from \"./modules/Events\";\r\n\r\n// create players\r\nlet dodot = new Player(\"Dodot\");\r\nlet enemy = new AI(\"enemy\");\r\n\r\n// make boards\r\nlet playerBoard = new Gameboard(dodot);\r\nlet enemyBoard = new Gameboard(enemy);\r\n\r\n// gameboard methods\r\nfunction gameIsOver() {\r\n  return playerBoard.isOver() || enemyBoard.isOver();\r\n}\r\n\r\nstart();\r\n\r\nfunction activateShipsPlacement() {\r\n  // handle isVertical\r\n  let isVertical = false;\r\n  const rotateButton = document.getElementById(\"rotateButton\");\r\n  rotateButton.onclick = () => {\r\n    isVertical = isVertical == true ? false : true;\r\n  };\r\n\r\n  const Carrier = new Ship(\"Carrier\", 5);\r\n  const Battleship = new Ship(\"Battleship\", 4);\r\n  const Cruiser = new Ship(\"Cruiser\", 3);\r\n  const Submarine = new Ship(\"Submarine\", 3);\r\n  const Destroyer = new Ship(\"Destroyer\", 2);\r\n\r\n  let currentShip = Carrier; // Start with the Carrier\r\n  let _length = currentShip.length; // for glowGrids\r\n\r\n  DOM.updateInstruction(currentShip.name, currentShip.length);\r\n\r\n  const handleShipsPlacement = (board, cell, row, col) => {\r\n    if (board.id === \"player\") {\r\n      const shipSuccessfullyPlaced = playerBoard.placeShip(\r\n        currentShip,\r\n        [row, col],\r\n        isVertical\r\n      );\r\n\r\n      if (shipSuccessfullyPlaced) {\r\n        DOM.placeShip(currentShip.length, [row, col], isVertical);\r\n        playerBoard.placeShip(currentShip, [row, col], isVertical);\r\n\r\n        // Move to the next ship\r\n        switch (currentShip) {\r\n          case Carrier:\r\n            currentShip = Battleship;\r\n            _length = currentShip.length;\r\n            DOM.updateInstruction(currentShip.name, currentShip.length);\r\n\r\n            break;\r\n          case Battleship:\r\n            currentShip = Cruiser;\r\n            _length = currentShip.length;\r\n            DOM.updateInstruction(currentShip.name, currentShip.length);\r\n\r\n            break;\r\n          case Cruiser:\r\n            currentShip = Submarine;\r\n            _length = currentShip.length;\r\n            DOM.updateInstruction(currentShip.name, currentShip.length);\r\n\r\n            break;\r\n          case Submarine:\r\n            currentShip = Destroyer;\r\n            _length = currentShip.length;\r\n            DOM.updateInstruction(currentShip.name, currentShip.length);\r\n\r\n            break;\r\n          case Destroyer:\r\n            // All ships are placed, remove the event listener\r\n            removeEventListener();\r\n            eventEmitter.emit(\"done ships placement\");\r\n            DOM.displayGameboard(playerBoard, \"player\", true);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  eventEmitter.on(\"gameboard click\", handleShipsPlacement);\r\n\r\n  const removeEventListener = () => {\r\n    eventEmitter.removeListener(\"gameboard click\", handleShipsPlacement);\r\n\r\n    cells.forEach((cell) => {\r\n      cell.removeEventListener(\"mouseover\", handleMouseOver);\r\n      cell.removeEventListener(\"mouseout\", handleMouseOut);\r\n    });\r\n  };\r\n\r\n  // todo WIP: add hover events\r\n  const playerBoardDOM = document.getElementById(\"player\");\r\n  const cells = Array.from(playerBoardDOM.getElementsByClassName(\"cell\"));\r\n  let hoveredCells = [];\r\n  cells.forEach((cell) => {\r\n    cell.addEventListener(\"mouseover\", handleMouseOver);\r\n    cell.addEventListener(\"mouseout\", handleMouseOut);\r\n  });\r\n\r\n  function handleMouseOver(event) {\r\n    console.log(hoveredCells);\r\n    // Extract row and col from the dataset of the hovered cell\r\n    const { row, col } = event.target.dataset;\r\n    console.log(row, col);\r\n\r\n    // Determine varying and constant coordinates based on isVertical\r\n    const varyingCoord = isVertical ? parseInt(row, 10) : parseInt(col, 10);\r\n    const constantCoord = isVertical ? parseInt(col, 10) : parseInt(row, 10);\r\n\r\n    // Add the \"dark\" class to the specified range of cells\r\n    for (let i = varyingCoord; i < varyingCoord + _length; i++) {\r\n      const currentCell = isVertical\r\n        ? findCellByDataAttributes(i, constantCoord)\r\n        : findCellByDataAttributes(constantCoord, i);\r\n\r\n      if (currentCell) {\r\n        currentCell.classList.add(\"dark\");\r\n        hoveredCells.push(currentCell);\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleMouseOut() {\r\n    // Reset the \"dark\" class for the previously hovered cells\r\n    resetDarkClass(hoveredCells);\r\n  }\r\n\r\n  function findCellByDataAttributes(row, col) {\r\n    return cells.find(\r\n      (cell) =>\r\n        cell.dataset.row === row.toString() &&\r\n        cell.dataset.col === col.toString()\r\n    );\r\n  }\r\n\r\n  function resetDarkClass() {\r\n    hoveredCells.forEach((cell) => {\r\n      cell.classList.remove(\"dark\");\r\n    });\r\n    hoveredCells = [];\r\n  }\r\n}\r\n\r\nfunction activateGame() {\r\n  //listen for gameboard clicks for attack\r\n  eventEmitter.on(\"gameboard click\", (board, cell, row, col) => {\r\n    if (board.id === \"enemy\" && dodot.isTheirTurn && !gameIsOver()) {\r\n      const results = enemyBoard.receiveAttack(row, col);\r\n\r\n      // Display gameboard without showing ships\r\n      DOM.displayGameboard(enemyBoard, \"enemy\", false);\r\n\r\n      if (results.isASuccessfulHit) {\r\n        switchTurn();\r\n      }\r\n\r\n      checkForWin();\r\n    }\r\n\r\n    if (enemy.isTheirTurn && !gameIsOver()) {\r\n      let results;\r\n\r\n      do {\r\n        const [row, col] = enemy.generateAttack();\r\n        results = playerBoard.receiveAttack(row, col);\r\n      } while (!results.isASuccessfulHit);\r\n\r\n      switchTurn();\r\n\r\n      // Display gameboard with showing ships\r\n      DOM.displayGameboard(playerBoard, \"player\", true);\r\n      checkForWin();\r\n    }\r\n  });\r\n}\r\n\r\nfunction checkForWin() {\r\n  // todo add feature\r\n  //DOM.displayWinner(player);\r\n\r\n  if (playerBoard.isOver()) {\r\n    DOM.announceWinner(\"You Lost\");\r\n\r\n    //reveal enemy ships\r\n    DOM.displayGameboard(enemyBoard, \"enemy\", false);\r\n    console.log(\"Player lost\", playerBoard.map, enemyBoard.map);\r\n  } else if (enemyBoard.isOver()) {\r\n    DOM.announceWinner(\"You Won\");\r\n    console.log(\"Player won\", playerBoard.map, enemyBoard.map);\r\n  }\r\n\r\n  return playerBoard.isOver()\r\n    ? playerBoard.player.name\r\n    : enemyBoard.player.name;\r\n}\r\n\r\nfunction switchTurn() {\r\n  dodot.toggleIsTheirTurn();\r\n  enemy.toggleIsTheirTurn();\r\n\r\n  return dodot.isTheirTurn ? dodot : enemy;\r\n}\r\n\r\nfunction start() {\r\n  dodot.isTheirTurn = true;\r\n  enemy.isTheirTurn = false;\r\n\r\n  DOM.displayGameboard(playerBoard, \"player\", true);\r\n  DOM.listenForGameboardClicks(); //async, activate event emitter\r\n\r\n  //position ships\r\n  activateShipsPlacement();\r\n  enemyBoard.placeShipsRandomly();\r\n\r\n  eventEmitter.on(\"done ships placement\", () => {\r\n    document.getElementById(\"enemy\").classList.remove(\"hide\");\r\n    document.getElementById(\"placing-ships\").classList.add(\"hide\");\r\n\r\n    activateGame();\r\n  });\r\n}\r\n"],"names":["ReflectOwnKeys","R","Reflect","ReflectApply","apply","target","receiver","args","Function","prototype","call","ownKeys","Object","getOwnPropertySymbols","getOwnPropertyNames","concat","NumberIsNaN","Number","isNaN","value","EventEmitter","init","this","module","exports","once","emitter","name","Promise","resolve","reject","errorListener","err","removeListener","resolver","slice","arguments","eventTargetAgnosticAddListener","handler","flags","on","addErrorHandlerIfEventEmitter","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","TypeError","_getMaxListeners","that","_addListener","type","prepend","m","events","existing","warning","create","newListener","emit","unshift","push","length","warned","w","Error","String","count","console","warn","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","bind","_listeners","unwrap","evlistener","arr","ret","Array","i","unwrapListeners","arrayClone","listenerCount","n","copy","addEventListener","wrapListener","arg","removeEventListener","defineProperty","enumerable","get","set","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","error","er","message","context","len","listeners","addListener","prependListener","prependOnceListener","list","position","originalListener","shift","index","pop","spliceOne","off","removeAllListeners","key","keys","rawListeners","eventNames","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","d","a","definition","o","obj","prop","hasOwnProperty","Ship","_classCallCheck","hits","_createGameState","WeakMap","_attackShip","WeakSet","_isPlacementPossible","_attackShip2","row","col","_Ship","gameState","shipsAndTheirOccupiedSpaces","hit","_isPlacementPossible2","numRows","map","numCols","Gameboard","_player","_this","_classPrivateMethodInitSpec","writable","missedSquares","hittedSquares","_classPrivateFieldGet","player","generateMap","eventEmitter","playerName","ship","coord","isVertical","placeShip","_ref2","_slicedToArray","success","tempMap","cell","tempList","_objectSpread","_classPrivateMethodGet","_this2","getRandomCoord","Math","floor","random","Carrier","Battleship","Cruiser","Submarine","Destroyer","attemptToPlaceShip","isPlacedSuccessfully","coords","results","isASuccessfulHit","shipHit","waterHit","some","includes","j","Player","isTheirTurn","_createClass","AI","_Player","_inherits","_super","DOM","id","gameboardDOM","document","createElement","gameboardHTML","innerHTML","classList","add","setAttribute","gameboard","listenForCellEvents","rowValue","dataset","colValue","rowNumber","parseInt","colNumber","darkenCells","playerBoard","getElementById","cells","from","getElementsByClassName","hoveredCells","forEach","_classStaticPrivateMethodGet","_handleMouseOver","event","_handleMouseOut","children","_coords","startRow","startCol","_ref","showShips","_ref3","missedRow","missedCol","remove","_ref4","_ref5","hitRow","hitCol","color","_event","fn","log","querySelectorAll","addClickEvent","board","e","_classStaticPrivateMe","_getRowAndColFromCell","enemyBoard","_shipName","_shipLength","innerText","modalBackground","querySelector","winnerText","onclick","location","reload","style","display","_event$target$dataset","_resetDarkClass","varyingCoord","constantCoord","currentCell","findCellByDataAttributes","_class","dodot","enemy","gameIsOver","isOver","checkForWin","announceWinner","displayGameboard","switchTurn","toggleIsTheirTurn","listenForGameboardClicks","currentShip","_length","updateInstruction","handleShipsPlacement","handleMouseOver","handleMouseOut","playerBoardDOM","find","toString","activateShipsPlacement","placeShipsRandomly","receiveAttack","_enemy$generateAttack2","generateAttack"],"sourceRoot":""}